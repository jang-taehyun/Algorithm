/*
problem : 자연수 n을 제곱수들의 합으로 표현할 때, 그 항의 최소 개수를 구해라
input : 자연수 n
output : 제곱수들의 합으로 표현할 수 있는 최소 항의 개수 k

idea
1. n=1일 때, 1은 제곱수이므로, 1^2으로 표현
   -> k=1
2. n=2일 때, 2는 제곱수가 아니다.
   n=1일 때 표현했던 수식에서 n=1일 때 표현했던 수식을 합쳐서 표현
   -> 1^2 + 1^2
   -> k=2
3. n=3일 때, 3은 제곱수가 아니고 홀수이다.
   n=2일 때 표현했던 수식에서 n=1일 때 표현했던 수식을 합쳐서 표현
   -> 1^2 + 1^2 + 1^2
   -> k=3
4. n=4일 때, 4는 제곱수이므로, 2^2으로 표현
   -> k=1
5. n=5일 때, 5는 제곱수가 아니다.
   n=4일 때 표현했던 수식에서 n=1일 때 표현했던 수식을 합치는 방법 : 2^2 + 1^2
   n=3일 때 표현했던 수식에서 n=2일 때 표현했던 수식을 합치는 방법 : 1^2 + 1^2 + 1^2 + 1^2 + 1^2
   -> 2^2 + 1^2
   -> k=2
6. n=6일 때, 6은 제곱수가 아니다.
   n=5일 때 표현했던 수식에서 n=1일 때 표현했던 수식을 합쳐서 표현한 방법 : 2^2 + 1^2 + 1^2
   n=4일 때 표현했던 수식에서 n=2일 때 표현했던 수식을 합쳐서 표현한 방법 : 2^2 + 1^2 + 1^2
   n=3일 때 표현했던 수식에서 n=3일 때 표현했던 수식을 합쳐서 표현한 방법 : 1^2 + 1^2 + 1^2 + 1^2 + 1^2 + 1^2
   -> 2^2 + 1^2 + 1^2
   -> k=3
7. 이 과정을 통해 관계식 도출
   DP[i] : 자연수 i를 제곱수들의 합으로 표현할 때 사용하는 항의 최소 개수
   DP[i] = 1                  (i가 제곱수일 때)
           min(DP[i-(k^2)]+DP[k^2]) (i가 제곱수가 아닐 때, 1 <= (k^2) <= (i-1))
*/

#include <iostream>
#include <cmath>
using namespace std;

int Min(int _x, int _y) { return _x < _y ? _x : _y; }

int main()
{
    // 자연수 n
    int n = 0;
    // 자연수 i를 제곱수들의 합으로 표현할 때 사용하는 항의 최소 개수를 저장할 배열 DP
    // 입력값이 100,000을 넘지 않으므로 배열의 크기를 100,001로 지정하고 1부터 시작
    int DP[100001];

    // 자연수 입력
    cin >> n;

    // n=1일 때 초기화
    DP[1] = 1;

    // index가 2부터 n까지 반복문을 돌면서 관계식을 이용해 계산 후 DP에 저장
    for (int index = 2; index <= n; index++)
    {
        // n이 제곱수가 아닐 때
        if ((sqrt(index) - (int)sqrt(index)) != 0)
        {
            // DP[index]값을 k=1일때로 초기화
            DP[index] = DP[index - 1] + DP[1];
            // k가 2부터 (index/2)까지 돌면서 최소값을 찾아 저장
            for (int k = 2; pow(k, 2) < index; k++)
            {
                int tmp = pow(k, 2);
                DP[index] = Min(DP[index - tmp] + DP[tmp], DP[index]);
            }
        }
        // n이 제곱수일 때
        else
            DP[index] = 1;
    }

    // 결과값 출력
    cout << DP[n];

    return 0;
}