/*
problem : 0부터 n까지의 정수 k개를 더해서 그 합이 n이 되는 경우의 수를 구해라. 이 때 덧셈의 순서가 바뀐 경우는 다른 경우로 센다.
input : 정수 n, 더하는 정수의 개수 k
output : 정수 n을 0부터 n까지의 정수 k개를 더해 그 합이 n이 되는 경우의 수

idea
1. 6을 0부터 6까지의 정수 4개를 더해 그 합이 되는 6이 되는 경우의 수를 구해보자.
2. 6을 0부터 6까지의 정수 4개를 더해 그 합이 되는 6이 되는 경우는 이렇다.
   1) 0부터 6까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 0
   2) 0부터 5까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 1
   3) 0부터 4까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 2
   4) 0부터 3까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 3
   5) 0부터 2까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 4
   6) 0부터 1까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 5
   7) 0부터 0까지의 정수 3개를 더해 그 합이 6이 되는 경우 + 6
3. 이를 이용해 수도 코드를 도출하면 이렇다.
   DP[k][n] : 0부터 n까지 정수 k개를 더해서 그 합이 n이 되는 경우의 수
   for(int i=0; i<=n; i++)
       DP[k][n] += DP[k-1][n]
*/

#include <iostream>
using namespace std;

long long dp[201][201];
const int mod = 1e9;

int main()
{
    int n, k;
    cin >> n >> k;

    for (int i = 0; i <= n; i++)
        dp[1][i] = 1;

    for (int i = 2; i <= k; i++)
        for (int j = 0; j <= n; j++)
            for (int k = 0; k <= j; k++)
                (dp[i][j] += dp[i - 1][k]) %= mod;

    cout << dp[k][n] << '\n';

    return 0;
}